"""
Django settings for movies project.

Generated by 'django-admin startproject' using Django 4.2.1.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path
import os
from dotenv import load_dotenv, find_dotenv
import json

from celery.schedules import crontab

load_dotenv(find_dotenv())

BASE_DIR = Path(__file__).resolve().parent.parent.parent.parent

features = os.path.join(BASE_DIR, "movies/config/features.json")

with open(features, "r") as json_file:
    loaded_data = json.load(json_file)

GENERAL = loaded_data["GENERAL"]
GENRES = loaded_data["GENRES"]
SPOKEN_LANGUAGES = loaded_data["SPOKEN_LANGUAGES"]


FEATURES = GENERAL + GENRES + SPOKEN_LANGUAGES

METADATA_PATH = BASE_DIR / "movies" / "data" / "movies_metadata_short.xlsx"
MODEL_DIR = BASE_DIR / "movies" / "word2vec.model"

CELERY_ACCEPT_CONTENT = ['json']
CELERY_TASK_SERIALIZER = 'json'


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "django-insecure-f5^&ph#wvrn*=9k&t&422#0jc)1otk7+x6wnm%(&q!lien1g7y"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ["*"]

INTERNAL_IPS = ["127.0.0.1"]

# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "movie.apps.MovieConfig",
    "menu.apps.MenuConfig",
    "users.apps.UsersConfig",
    "django.contrib.postgres",
    "playlist.apps.PlaylistConfig",
    "forum.apps.ForumConfig",
    "factorization_machine.apps.FactorizationMachineConfig",
    "debug_toolbar",
    'django_celery_beat'
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    "debug_toolbar.middleware.DebugToolbarMiddleware",
]

ROOT_URLCONF = "movies.urls"

TEMPLATES = [

    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [BASE_DIR / "movies" / "templates"],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "movies.wsgi.application"


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases


db_name = os.getenv("db_name")
db_user_name = os.getenv("db_user_name")
db_psw = os.getenv("db_psw")
db_host = os.getenv("db_host")
db_port = os.getenv("db_port")

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.postgresql",
        "NAME": db_name,
        "USER": db_user_name,
        "PASSWORD": db_psw,
        "HOST": db_host,
        "PORT": db_port,
    }
}

# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = "/static/"
STATICFILES_DIRS = [
    BASE_DIR / "movies" / "static",
]
STATIC_ROOT = BASE_DIR / "movies" / "collected_static"

if not os.path.exists(STATIC_ROOT):
    os.makedirs(STATIC_ROOT)

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"
LOGIN_URL = "users:login"


CELERY_BEAT_SCHEDULE = {

    "model_pipeline": {
        "task": "factorization_machine.tasks.model_pipeline",
         "schedule": crontab(minute="*/1"),
    },
    "sample_task": {
        "task": "factorization_machine.tasks.sample_task",
        "schedule": crontab(minute="*/1"),
    }
}